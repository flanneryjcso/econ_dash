library(gridExtra)
data <- read_csv('L:\\R Scripts\\Temporary\\interest_rates.csv')
head(data)
data_long <- data %>%
mutate(TimePeriod = ymd(TimePeriod, truncated = 1)) %>%
pivot_longer(mortgage:deposit_rate, names_to = 'variable', values_to = 'value')
data_rates <- filter(data_long, variable %in% c('mortgage', 'consumer_loans', 'deposit_rate'))
data_volumes <- filter(data_long, variable %in% c('mortgage_vol', 'consumer_vol'))
data_volumes <- data_volumes %>%
mutate(variable = str_replace(variable, "_vol", ""),
variable = str_replace(variable, "consumer", "consumer_loans"))
line_plot <- ggplot(data_rates, aes(x = TimePeriod, y = value, color = variable)) + geom_line() + labs(x = "", y = "Interest Rate") +
theme(legend.position = "top", legend.title = element_blank())
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank())
combined_plot <- grid.arrange(line_plot, bar_plot, ncol = 2)
cso_palette <- read_csv('L:\\R Scripts\\Temporary\\color_palette.csv')
head(cso_palette)
line_plot <- ggplot(data_rates, aes(x = TimePeriod, y = value, color = variable)) + geom_line() + labs(x = "", y = "Interest Rate") +
theme(legend.position = "top", legend.title = element_blank()) + scale_color_manual(values = cso_pale$Code)
line_plot <- ggplot(data_rates, aes(x = TimePeriod, y = value, color = variable)) + geom_line() + labs(x = "", y = "Interest Rate") +
theme(legend.position = "top", legend.title = element_blank()) + scale_color_manual(values = cso_palette$Code)
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_color_manual(values = cso_palette$Code)
combined_plot <- grid.arrange(line_plot, bar_plot, ncol = 2)
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = cso_palette$Code)
combined_plot <- grid.arrange(line_plot, bar_plot, ncol = 2)
?scale_color_manual
cso_palette$Code
line_plot <- ggplot(data_rates, aes(x = TimePeriod, y = value, color = variable)) + geom_line() + labs(x = "", y = "Interest Rate") +
theme(legend.position = "top", legend.title = element_blank()) + scale_color_manual(values = c("#405381", "#5BC1A5", "#FCBE72"))
line_plot
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = c("#405381", "#FCBE72"))
combined_plot <- grid.arrange(line_plot, bar_plot, ncol = 2)
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = c("#405381", "#0091AB"))
combined_plot <- grid.arrange(line_plot, bar_plot, ncol = 2)
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = c("#405381", "#90989F"))
bar_plot
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = c("#405381", "#3D5999"))
bar_plot
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = c("#405381", "#C6CC5C"))
bar_plot
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = c("#405381", "#579599"))
bar_plot
line_plot
line_plot <- ggplot(data_rates, aes(x = TimePeriod, y = value, color = variable)) + geom_line() + labs(x = "", y = "Interest Rate") +
theme(legend.position = "top", legend.title = element_blank()) + scale_color_manual(values = c("#405381", "#0091AB", "#5BC1A5"))
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank()) + scale_fill_manual(values = c("#405381", "#5BC1A5"))
combined_plot <- grid.arrange(line_plot, bar_plot, ncol = 2)
line_plot <- ggplot(data_rates, aes(x = TimePeriod, y = value, color = variable)) + geom_line() + labs(x = "", y = "Interest Rate") +
theme(legend.position = "top", legend.title = element_blank())
bar_plot <- ggplot(data_volumes, aes(x = TimePeriod, y = value, fill = variable)) + geom_bar(stat = "identity", position = "dodge") + labs(x = "", y = "Volume") +
theme(legend.position = "top", legend.title = element_blank())
combined_plot <- grid.arrange(line_plot, bar_plot, ncol = 2)
ggsave('L:\\R Scripts\\Temporary\\int_plot.png', dpi = 200, plot = combined_plot, width = 8, height = 4)
library(natbase)
library(tidyverse)
basis <- 'CL_2021'
source('L://R Scripts//Programmes//login.R')
Sys.setenv(NATBASE_USERNAME = username, NATBASE_PASSWORD = password)
connect_to_natbase()
a_o_balancing_q_outputs <- get_natbase_data('A_O_Balancing_Q_Outputs')
a_qna_seasonally_adjusted <- get_natbase_data('A_QNA_Seasonally_Adjusted')
dbDisconnect(natbase)
growth <- function(x, n) (x/lag(x, n = n)-1)*100
diff <- function(x, n) (x - lag(x, n = n))
qna_nsa <- a_o_balancing_q_outputs %>%
select(timeperiod, basis, pce, gfcf, stocks, gdp, totaldd, pance, finaldd, modfindd, gfcf_mod, exports, imports) %>%
filter(basis == basis) %>%
mutate(cap_invest = gfcf + stocks,
net_exports = exports - imports,
across(where(is.double), list(growth = ~ round(growth(.x, n = 4), digits = 1), diff = ~ round(diff(.x, n = 4)/1000000000, digits = 1)))) %>%
slice_tail() %>%
select(timeperiod, cap_invest_diff, cap_invest_growth, pce_growth, pance_growth, exports_growth, imports_growth, net_exports_growth,
finaldd_growth, modfindd_growth, pce_diff, pance_diff, gfcf_mod_diff, exports_diff, imports_diff, net_exports_diff) %>%
pivot_longer(cap_invest_diff:net_exports_diff, names_to = 'Variable', values_to = 'Values') %>%
mutate(Adjustment = 'NSA')
qna_sa <- a_qna_seasonally_adjusted %>%
select(timeperiod, qna_variable, value) %>%
mutate(qna_variable = str_to_lower(qna_variable)) %>%
filter(qna_variable %in% c('gfcf_total_cl_capform', 'tdd_cl_annex4', 'consttotal_pce', 'gdp_t0102_cl', 'pance_cl_balancing',
'stocks_cl_balancing', 'fdd_cl_annex4', 'fdd_mod_cl_annex4', 'gfcf_less_ip_airls_cl_capform')) %>%
pivot_wider(names_from = qna_variable, values_from = value) %>%
mutate(cap_invest = gfcf_total_cl_capform + stocks_cl_balancing,
across(where(is.double), list(growth = ~ round(growth(.x, n = 1), digits = 1), diff = ~ round(diff(.x, n = 1), digits = 1))),
cap_invest_share_tdd = round(cap_invest/tdd_cl_annex4*100, digits = 1)) %>%
slice_tail() %>%
select(timeperiod, cap_invest_growth, cap_invest_share_tdd, cap_invest_diff, consttotal_pce_growth, pance_cl_balancing_growth, gdp_t0102_cl_growth,
fdd_cl_annex4_growth, fdd_mod_cl_annex4_growth, consttotal_pce_diff, pance_cl_balancing_diff, gfcf_less_ip_airls_cl_capform_diff) %>%
pivot_longer(cap_invest_growth:gfcf_less_ip_airls_cl_capform_diff, names_to = 'Variable', values_to = 'Values') %>%
mutate(Adjustment = 'SA')
qna_union <- union_all(qna_nsa, qna_sa)
write_csv(qna_union, 'L://R Scripts//Temporary//quarterly_pub_text_check.csv')
library(tidyverse)
data <- read_csv('L:\\R Scripts\\Temporary\\consumption_dna_data.csv')
head(data)
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line()
data <- data %>% mutate(quintile = as.character(quintile))
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line()
ggplot(data, aes(x = Year, y = fce_national)) + geom_line() + facet_wrap(~ quintile)
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line() +
scale_color_manual(values = c('#405381', '#5BC1A5', '#FCBE72', '#0091AB', '#90989F'))
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line() +
scale_color_manual(values = c('#405381', '#5BC1A5', '#FCBE72', '#0091AB', '#90989F')) + theme(legend.title = element_blank())
data <- data %>% mutate(quintile = as.character(quintile),
fce_national = fce_national / 1000000)
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line() +
scale_color_manual(values = c('#405381', '#5BC1A5', '#FCBE72', '#0091AB', '#90989F')) + theme(legend.title = element_blank())
?geom_line
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line(linemitre = 1.5) +
scale_color_manual(values = c('#405381', '#5BC1A5', '#FCBE72', '#0091AB', '#90989F')) + theme(legend.title = element_blank())
?geom_line
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line(size = 1.5) +
scale_color_manual(values = c('#405381', '#5BC1A5', '#FCBE72', '#0091AB', '#90989F')) + theme(legend.title = element_blank())
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line(size = 1.5) +
scale_color_manual(values = c('#405381', '#5BC1A5', '#FCBE72', '#0091AB', '#90989F')) + theme(legend.title = element_blank()) +
labs(x = '', y = '')
ggplot(data, aes(x = Year, y = fce_national, color = quintile)) + geom_line(size = 1.5) +
scale_color_manual(values = c('#405381', '#5BC1A5', '#FCBE72', '#0091AB', '#90989F')) +
theme(legend.title = element_blank(), legend.position = 'top') + labs(x = '', y = '')
ggsave('L:\\R Scripts\\Temporary\\consumption_dna.png', dpi = 500, width = 8, height = 4)
library(natbase)
library(tidyverse)
source('L:\\R Scripts\\programmes\\login.R')
Sys.setenv(NATBASE_USERNAME = username, NATBASE_PASSWORD = password)
connect_to_natbase()
a_qna_seasonally_adjusted <- get_natbase_data('A_QNA_Seasonally_Adjusted')
dbDisconnect(natbase)
pce_sa <- a_qna_seasonally_adjusted %>%
select(timeperiod, qna_variable, value) %>%
filter(qna_variable %in% c('CONSTGOODS_PCE', 'CONSTSERVICES_PCE', 'CONSTTOTAL_PCE', 'CURRTOTAL_PCE') & timeperiod >= '2018Q1') %>%
pivot_wider(names_from = qna_variable, values_from = value) %>%
mutate(across(where(is.double), ~ (.x/lag(.x, n = 1)-1)*100, .names = "{.col}_qoq"))
names(pce_sa) <- str_to_lower(names(pce_sa))
write_csv(pce_sa, paste0('L:\\R Scripts\\Temporary\\pce_sa_', str_replace_all(Sys.Date(), '-', ''), '.csv'))
library(tidyverse)
library(natbase)
library(csodata)
library(lubridate)
HOUSEHOLDS_CURRENT <- 1977933.473 # From PCE other HBS related 2022
hbs_data <- read_csv('M:\\PCE\\PCE Share\\HBS 2022\\final2022_ecoicop_only.csv')
weights_data <- read_csv('M\\PCE\\PCE Share\\HBS 2022\\weights_expenditure_questionnaire.csv')
weights_data <- read_csv('M:\\PCE\\PCE Share\\HBS 2022\\weights_expenditure_questionnaire.csv')
head(weights_data)
View(weights_data)
weights_4_digit <- weights_data %>%
filter(str_length(Code) == 8)
View(weights_4_digit)
head(hbs_data)
View(hbs_data)
cpi_data <- cso_get_data('cpm01', wide_format = 'tall', cache = FALSE)
cpi <- cpi_data %>%
filter(Statistic == 'Consumer Price Index (Base Dec 2016=100)' & Commodity.Group != 'All items') %>%
mutate(Month = ymd(Month, truncated = 1),
Year = year(Month)) %>%
filter(Month <= as.Date('2023-07-01')) %>%
group_by(Year, Commodity.Group) %>%
summarise(value = mean(value)) %>%
filter(Year >= 2022) %>%
mutate(coicop_code = case_when(
Commodity.Group == 'Food and non-alcoholic beverages' ~ 'CP01',
Commodity.Group == 'Alcoholic beverages and tobacco' ~ 'CP02',
Commodity.Group == 'Clothing and footwear' ~ 'CP03',
Commodity.Group == 'Housing, water, electricity, gas and other fuels' ~ 'CP04',
Commodity.Group == 'Furnishings, household equipment and routine household maintenance' ~ 'CP05',
Commodity.Group == 'Health' ~ 'CP06',
Commodity.Group == 'Transport' ~ 'CP07',
Commodity.Group == 'Communications' ~ 'CP08',
Commodity.Group == 'Recreation and culture' ~ 'CP09',
Commodity.Group == 'Education' ~ 'CP10',
Commodity.Group == 'Restaurants and hotels' ~ 'CP11',
Commodity.Group == 'Miscellaneous goods and services' ~ 'CP12'
)) %>%
ungroup() %>%
select(Year, coicop_code, value) %>%
pivot_wider(names_from = coicop_code, values_from = value) %>%
mutate(across(.cols = starts_with('CP'), ~ 1/(.x/lag(.x, n = 1)*(7/12) + 5/12))) %>%
na.omit() %>%
select(-Year) %>%
pivot_longer(cols = everything(), names_to = 'coicop', values_to = 'cpi_adj_factor')
hbs_4digit <- hbs_data %>%
filter(str_length(eCoicop) == 14) %>%
mutate(coicop = paste0('CP', str_sub(eCoicop, 9, 10)),
coicop_code = paste0('CP', str_replace(str_sub(eCoicop, 9, 12), '_', ''))) %>%
left_join(cpi, by = 'coicop') %>%
mutate(Avg_exp_adj = Avg_exp * cpi_adj_factor,
households = HOUSEHOLDS_CURRENT,
total_expenditure = Avg_exp_adj * households) %>%
select(coicop_code, total_expenditure)
View(hbs_4digit)
hbs_3digit <- hbs_data %>%
filter(str_length(eCoicop) == 12) %>%
mutate(coicop = paste0('CP', str_sub(eCoicop, 9, 10)),
coicop_code = paste0('CP', str_replace(str_sub(eCoicop, 9, 12), '_', ''))) %>%
left_join(cpi, by = 'coicop') %>%
mutate(Avg_exp_adj = Avg_exp * cpi_adj_factor,
households = HOUSEHOLDS_CURRENT,
total_expenditure = Avg_exp_adj * households) %>%
select(coicop_code, total_expenditure)
head(hbs_3digit)
hbs_4digit <- hbs_data %>%
filter(str_length(eCoicop) == 14)
head(hbs_4digit)
hbs_4digit <- hbs_data %>%
filter(str_length(eCoicop) == 14) %>%
mutate(coicop = paste0('CP', str_sub(eCoicop, 9, 10)),
coicop_code = paste0('CP', str_replace(str_sub(eCoicop, 9, 12), '_', '')))
head(hbs_4digit)
hbs_4digit <- hbs_data %>%
filter(str_length(eCoicop) == 14) %>%
mutate(coicop = paste0('CP', str_sub(eCoicop, 9, 10)),
coicop_code = paste0('CP', str_replace(str_sub(eCoicop, 9, 14), '_', '')))
head(hbs_4digit)
hbs_4digit <- hbs_data %>%
filter(str_length(eCoicop) == 14) %>%
mutate(coicop = paste0('CP', str_sub(eCoicop, 9, 10)),
coicop_code = paste0('CP', str_replace_all(str_sub(eCoicop, 9, 14), '_', '')))
head(hbs_4digit)
hbs_4digit <- hbs_data %>%
filter(str_length(eCoicop) == 14) %>%
mutate(coicop = paste0('CP', str_sub(eCoicop, 9, 10)),
coicop_code = paste0('CP', str_replace_all(str_sub(eCoicop, 9, 14), '_', ''))) %>%
left_join(cpi, by = 'coicop') %>%
mutate(Avg_exp_adj = Avg_exp * cpi_adj_factor,
households = HOUSEHOLDS_CURRENT,
total_expenditure = Avg_exp_adj * households) %>%
select(coicop_code, total_expenditure)
head(hbs_4digit)
head(weights_4_digit)
hbs_4digit <- hbs_data %>%
filter(str_length(eCoicop) == 14) %>%
mutate(coicop = paste0('CP', str_sub(eCoicop, 9, 10)),
coicop_code = paste0('CP', str_replace_all(str_sub(eCoicop, 9, 14), '_', '')))
View(hbs_4digit)
weights_4_digit <- weights_data %>%
filter(str_length(Code) == 8) %>%
mutate(coicop_code = paste0('CP', str_replace_all(str_sub(Code, 3, 8), '.', '')))
head(weights_4_digit)
?str_sub
str_sub(weights_4_digit$Code, 9, 14)
str_sub(weights_4_digit$Code, 3, 8)
str_replace_all(str_sub(weights_4_digit$Code, 3, 8), '.', '')
str_replace_all(str_sub(weights_4_digit$Code, 3, 8), '\.', '')
str_replace_all(str_sub(weights_4_digit$Code, 3, 8), '\\.', '')
weights_4_digit <- weights_data %>%
filter(str_length(Code) == 8) %>%
mutate(coicop_code = paste0('CP', str_replace_all(str_sub(Code, 3, 8), '\\.', '')))
head(weights_4_digit)
head(hbs_4digit)
weights_4_digit <- weights_data %>%
filter(str_length(Code) == 8) %>%
mutate(coicop_code = paste0('CP', str_replace_all(str_sub(Code, 3, 8), '\\.', ''))) %>%
left_join(hbs_4digit, by = 'coicop_code')
View(weights_4_digit)
head(weights_4_digit)
source('L:\\R Scripts\\programmes\\login.R')
Sys.setenv(NATBASE_USERNAME = username, NATBASE_PASSWORD = password)
connect_to_natbase()
a_pce_fce_esa_data <- get_natbase_data('a_pce_fce_esa_tables')
dbDisconnect(natbase)
lookup_table <- read_csv('M:\\PCE\\PCE Share\\HBS 2022\\lookup_table.csv')
fce_data <- a_pce_fce_esa_data %>%
filter(basis == 'CP' & pce_type == 'FCE' & timeperiod == '2022' & str_length(coicop_code) == 5) %>%
select(timeperiod, coicop_code, value) %>%
group_by(coicop_code) %>%
summarise(value = sum(value))
fce_hbs_join <- fce_data %>%
left_join(hbs_3digit, by = 'coicop_code') %>%
rename(coicop = coicop_code, hfce = value, hbs = total_expenditure) %>%
mutate(diff = hfce - hbs,
pct_diff = (hfce/hbs-1)*100) %>%
filter(str_sub(coicop, 3, 4) != 13) %>%
mutate(hbs = case_when(
coicop == 'CP082' ~ 0,
coicop == 'CP083' ~ 0,
TRUE ~ hbs
)) %>%
left_join(lookup_table, by = c("coicop" = "coicop_code")) %>%
select(coicop, description, hfce, hbs, diff, pct_diff)
`%notin%` <- Negate(`%in%`)
fce_hbs_total <- fce_hbs_join %>%
filter(coicop %notin% c('CP063', 'CP125', 'CP126')) %>%
select(hfce, hbs) %>%
na.omit() %>%
summarise(hfce = sum(hfce), hbs = sum(hbs))
head(fce_hbs_join)
head(weights_4_digit)
weights_4_digit <- weights_data %>%
filter(str_length(Code) == 8) %>%
mutate(coicop_code = paste0('CP', str_replace_all(str_sub(Code, 3, 8), '\\.', ''))) %>%
left_join(hbs_4digit, by = 'coicop_code') %>%
select(coicop_code, Coicop, CP_2022, Avg_exp) %>%
rename(coicop = coicop_code, description = Coicop, hfce = CP_2022, hbs = Avg_exp)
head(weights_4_digit)
weights_4_digit <- weights_data %>%
filter(str_length(Code) == 8) %>%
mutate(coicop_code = paste0('CP', str_replace_all(str_sub(Code, 3, 8), '\\.', ''))) %>%
left_join(hbs_4digit, by = 'coicop_code') %>%
select(coicop_code, Coicop, CP_2022, Avg_exp) %>%
rename(coicop = coicop_code, description = Coicop, hfce = CP_2022, hbs = Avg_exp) %>%
mutate(diff = hfce - hbs,
pct_diff = (hfce/hbs-1)*100)
head(weights_4_digit)
View(weights_4_digit)
fce_hbs_join_4_digit <- weights_data %>%
filter(str_length(Code) == 8) %>%
mutate(coicop_code = paste0('CP', str_replace_all(str_sub(Code, 3, 8), '\\.', ''))) %>%
left_join(hbs_4digit, by = 'coicop_code') %>%
select(coicop_code, Coicop, CP_2022, Avg_exp) %>%
rename(coicop = coicop_code, description = Coicop, hfce = CP_2022, hbs = Avg_exp) %>%
mutate(diff = hfce - hbs,
pct_diff = (hfce/hbs-1)*100)
write_csv(fce_hbs_join_4_digit, 'L:\\R Scripts\\Temporary\\fce_hbs_join_4_digit.csv')
library(natbase)
source("L:\\R Scripts\\Programmes\\login.R")
Sys.setenv(NATBASE_USERNAME = username, NATBASE_PASSWORD = password)
connect_to_natbase()
ref_year <- "2021" # For chain-linking
year_annual <- 2022 # latest year for which we have an annual figure, whether NIE or preliminary
curr_qtr <- 'Q3 2023' # Current quarter
prev_qtr <- 'Q2 2023' # Previous quarter
queries_folder_prev <- 2023 # Queries folder year the data was saved in last quarter
queries_folder_curr <- 2023 # Queries folder year the data is being saved
data_cl <- get_natbase_query(paste0("select TimePeriod, Basis, PCE_Chainlink_Category, Value from A_PCEQ_ChainLinking where Basis = 'CL_", ref_year, "'"))
data_cp <- get_natbase_query("select TimePeriod, Basis, PCE_Chainlink_Category, Value from A_PCEQ_ChainLinking where Basis = 'CP'")
cars_cp <- get_natbase_query("select TimePeriod, PCE_Item, Value from A_PCEQ_final_aggregates where PCE_Item = 'CARS'")
sa_data <- get_natbase_query("select * from A_QNA_Seasonally_Adjusted where QNA_Variable in ('CONSTGOODS_PCE', 'CONSTSERVICES_PCE', 'CURRGOODS_PCE', 'CURRSERVICES_PCE')")
dbDisconnect(natbase)
head(data_cp)
sheet1_cp <- data_cp %>%
select(-basis) %>%
rename(PCE_Item = pce_chainlink_category) %>%
union(cars_cp) %>%
filter(timeperiod >= "1999Q1") %>%
mutate(value = ifelse(PCE_Item %in% c('GOODS', 'SERVICES'), Value*1000, Value)) %>%
pivot_wider(names_from = PCE_Item, values_from = value) %>%
mutate(TOTAL = GOODS + SERVICES,
timeperiod = paste0(str_sub(timeperiod, 1, 4), " ", str_sub(timeperiod, 5, 6))) %>%
rename(Quarter = timeperiod)
library(tidyverse)
library(openxlsx)
library(readxl)
library(lubridate)
sheet1_cp <- data_cp %>%
select(-basis) %>%
rename(PCE_Item = pce_chainlink_category) %>%
union(cars_cp) %>%
filter(timeperiod >= "1999Q1") %>%
mutate(value = ifelse(PCE_Item %in% c('GOODS', 'SERVICES'), Value*1000, Value)) %>%
pivot_wider(names_from = PCE_Item, values_from = value) %>%
mutate(TOTAL = GOODS + SERVICES,
timeperiod = paste0(str_sub(timeperiod, 1, 4), " ", str_sub(timeperiod, 5, 6))) %>%
rename(Quarter = timeperiod)
sheet1_cp <- data_cp %>%
select(-basis) %>%
rename(PCE_Item = pce_chainlink_category) %>%
union(cars_cp)
head(cars_cp)
sheet1_cp <- data_cp %>%
select(-basis) %>%
rename(pce_item = pce_chainlink_category) %>%
union(cars_cp) %>%
filter(timeperiod >= "1999Q1") %>%
mutate(value = ifelse(PCE_Item %in% c('GOODS', 'SERVICES'), Value*1000, Value)) %>%
pivot_wider(names_from = pce_item, values_from = value) %>%
mutate(TOTAL = GOODS + SERVICES,
timeperiod = paste0(str_sub(timeperiod, 1, 4), " ", str_sub(timeperiod, 5, 6))) %>%
rename(Quarter = timeperiod)
sheet1_cp <- data_cp %>%
select(-basis) %>%
rename(pce_item = pce_chainlink_category) %>%
union(cars_cp) %>%
filter(timeperiod >= "1999Q1") %>%
mutate(value = ifelse(pce_item %in% c('GOODS', 'SERVICES'), Value*1000, Value)) %>%
pivot_wider(names_from = pce_item, values_from = value) %>%
mutate(TOTAL = GOODS + SERVICES,
timeperiod = paste0(str_sub(timeperiod, 1, 4), " ", str_sub(timeperiod, 5, 6))) %>%
rename(Quarter = timeperiod)
sheet1_cp <- data_cp %>%
select(-basis) %>%
rename(pce_item = pce_chainlink_category) %>%
union(cars_cp) %>%
filter(timeperiod >= "1999Q1") %>%
mutate(value = ifelse(pce_item %in% c('GOODS', 'SERVICES'), value*1000, value)) %>%
pivot_wider(names_from = pce_item, values_from = value) %>%
mutate(TOTAL = GOODS + SERVICES,
timeperiod = paste0(str_sub(timeperiod, 1, 4), " ", str_sub(timeperiod, 5, 6))) %>%
rename(Quarter = timeperiod)
head(sheet1_cp)
head(sheet1_cl)
sheet1_cl <- data_cl %>%
filter(pce_chainlink_category %in% c('GOODS', 'SERVICES', 'CARS', 'TOTAL') & timeperiod >= "2000Q1") %>%
mutate(value = value * 1000) %>%
pivot_wider(names_from = pce_chainlink_category, values_from = value) %>%
mutate(timeperiod = paste0(str_sub(timeperiod, 1, 4), " ", str_sub(timeperiod, 5, 6))) %>%
rename(Quarter = timeperiod)
head(sheet1_cl)
sheet1_cp_yoy <- sheet1_cp %>%
rename(Goods = GOODS, Services = SERVICES, Total = TOTAL) %>%
select(-CARS) %>%
mutate(across(.cols = where(is.double), .fns = ~ (.x/lag(.x, 4)-1)*100, .names = '{.col}_yoy')) %>%
na.omit()
head(sheet1_cp_yoy)
names(sheet1_cp_yoy) <- sub(pattern = "_yoy", replacement = "", x = names(sheet1_cp_yoy))
head(sheet1_cp_yoy)
sheet1_cl_yoy <- sheet1_cl %>%
select(GOODS:TOTAL) %>%
rename(Goods = GOODS, services = SERVICES, Total = TOTAL) %>%
mutate(across(.cols = where(is.double), .fns = ~ (.x/lag(.x, 4)-1)*100, .names = '{.col}_yoy'))
names(sheet1_cl_yoy) <- sub(pattern = "_yoy", replacement = "", x = names(sheet1_cl_yoy))
sheet1_cars <- sheet1_cl %>%
select(Quarter, CARS) %>%
left_join(sheet1_cp, by = "Quarter") %>%
select(CARS.y, CARS.x)
head(sheet1_cars)
sheet2_cp_sa <- sa_data %>%
select(timeperiod, qna_variable, value) %>%
filter(qna_variable %in% c('CURRGOODS_PCE', 'CURRSERVICES_PCE') & timeperiod >= '2000Q1') %>%
pivot_wider(names_from = qna_variable, values_from = value) %>%
rename(Quarter = timeperiod, Goods = CURRGOODS_PCE, Services = CURRSERVICES_PCE)
head(sheet2_cp_sa)
sheet2_cl_sa <- sa_data %>%
select(timeperiod, qna_variable, value) %>%
filter(qna_variable %in% c('CONSTGOODS_PCE', 'CONSTSERVICES_PCE') & timeperiod >= '2001Q1') %>%
pivot_wider(names_from = qna_variable, values_from = value) %>%
select(-timeperiod) %>%
rename(Goods = CONSTGOODS_PCE, Services = CONSTSERVICES_PCE)
head(sheet1_cp)
sheet3_cp <- sheet1_cp %>%
mutate(TimePeriod = yq(Quarter),
year = year(TimePeriod)) %>%
group_by(year) %>%
summarise_at(c('GOODS', 'SERVICES', 'TOTAL'), sum) %>%
filter(year >= 2000 & year <= year_annual) %>%
rename(Year = year, Goods = GOODS, Services = SERVICES, Total = TOTAL)
head(sheet3_cp)
sheet3_cl <- sheet1_cl %>%
mutate(TimePeriod = yq(Quarter),
year = year(TimePeriod)) %>%
group_by(year) %>%
summarise_at(c('GOODS', 'SERVICES', 'TOTAL'), sum) %>%
filter(year >= 2000 & year <= year_annual) %>%
rename(Goods = GOODS, Services = SERVICES, Total = TOTAL)
head(sheet3_cl)
sheet3_cl_alt <- sheet3_cl %>% select(-year)
sheet3_cp_yoy <- sheet3_cp %>%
mutate(Year = as.character(Year),
across(.cols = where(is.double), .fns = ~ (.x/lag(.x, 1)-1)*100))
head(sheet3_cp_yoy)
sheet3_cl_yoy <- sheet3_cl %>%
mutate(Year = as.character(year),
across(.cols = where(is.double), .fns = ~ (.x/lag(.x, 1)-1)*100)) %>%
select(-year, -Year)
head(sheet3_cl_yoy)
library(dplyr)
library(tidyr)
library(openxlsx)
library(RODBC)
library(seasonal)
library(stringr)
library(purrr)
# External consistency check data
source("L:\\R Scripts\\Programmes\\login.R")
connect_to_natbase <- function(user, password) {
natbase <<- odbcDriverConnect(paste0("DRIVER={SQL Server}; uid=",user,"; pwd=",password,
"; SERVER=3.1.2.221; database=national_accounts_live; schema=dbo; region=yes"), believeNRows=FALSE)
}
connect_to_natbase(username, password)
pce_data <- sqlQuery(natbase, "SELECT Basis, PCE_ChainLink_Category, TimePeriod, Value
FROM dbo.A_PCEQ_ChainLinking
WHERE Basis = 'CL_2021'")
odbcClose(natbase)
pce_data_wide <- pce_data %>%
mutate(PCE_ChainLink_Category = str_replace_all(PCE_ChainLink_Category, " ", "_"),
PCE_ChainLink_Category = str_replace_all(PCE_ChainLink_Category, "-", "_"),
Value = abs(Value)) %>%
pivot_wider(names_from = PCE_ChainLink_Category, values_from = Value) %>%
select(-FISIM)
ts_objects <- map_if(pce_data_wide, is.double, ts, start = c(1995, 1), frequency = 4)
sa_objects <- map_if(ts_objects, is.ts, seas, transform.function = "log", x11 = "")
sa_df <- map(sa_objects[3:20], `$`, 'data') %>%
map(~ as.data.frame(.x)) %>%
map(`$`, 'final') %>%
as.data.frame()
sa_df <- cbind(pce_data_wide$TimePeriod, sa_df) %>%
rename(TimePeriod = `pce_data_wide$TimePeriod`)
write.xlsx(sa_df, 'L:\\R Scripts\\Temporary\\sa_df.xlsx', overwrite = TRUE)
library(csodata)
library(purrr)
library(readr)
library(data.table)
library(stringr)
pxstat_codes <- c('NAQ04', 'NQI01', 'GFQ10', 'GFQ12', 'ISQ04', 'BPQ15', 'CPM16', 'TSM01', 'WPM24', 'RSM05', 'NDQ07', 'MSI02', 'TFQ01', 'GFQ01', 'GFQ02', 'TSM09', 'HPM09', 'QLF03',
'MUM01', 'LRM13', 'EHQ03', 'NDQ06', 'MSI02', 'TFQ02', 'TEM01', 'NAQ05')
data <- map(pxstat_codes, cso_get_data, wide_format = FALSE, cache = FALSE)
names(data) <- map_chr(pxstat_codes, str_to_lower)
data %>% names(.) %>%
walk(~ write_csv(data[[.]], paste0(., ".csv")))
head(data[[1]])
data %>% names(.) %>%
walk(~ write_csv(data[[.]], paste0(., ".csv")))
setwd('L:\\GitHub\\econ_dash')
data %>% names(.) %>%
walk(~ write_csv(data[[.]], paste0(., ".csv")))
